{"ast":null,"code":"import axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nfunction RegisterComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Please enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_template_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtext(0, \" Already have an account? \");\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function RegisterComponent_ng_template_26_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleForm());\n    });\n    i0.ɵɵtext(2, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(router) {\n    this.router = router;\n    this.email = '';\n    this.password = '';\n    this.age = '';\n    this.formSubmitted = false;\n    this.showLoginBox = true;\n  }\n  toggleForm() {\n    this.showLoginBox = !this.showLoginBox;\n  }\n  onInput(event, field) {\n    const input = event.target;\n    const value = input.value;\n    if (field === 'email') {\n      this.email = value;\n    } else if (field === 'password') {\n      this.password = value;\n    } else if (field === 'age') {\n      this.age = value;\n    }\n  }\n  onSubmit(event) {\n    event.preventDefault(); // Prevent the default form submission\n    this.formSubmitted = true;\n    if (this.email && this.password) {\n      // Define the request body\n      const body = {\n        email: this.email,\n        password: this.password,\n        age: this.age\n      };\n      // Make the POST request with Axios\n      axios.post('https://flet-nix-backend.vercel.app/api/auth/register', body, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Response:', response.data);\n        alert(\"Registration Successfull!\");\n        this.router.navigate(['/login']);\n        // Handle response here (e.g., save token, navigate to another page, etc.)\n      }).catch(error => {\n        console.error('Error:', error);\n        // Handle error here (e.g., show error message to user)\n      });\n      // Example action after successful submission\n      this.showLoginBox = false;\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 28,\n    vars: 4,\n    consts: [[1, \"flex\", \"mainBox\", \"min-h-screen\", \"items-center\", \"justify-center\", \"bg-gradient-to-br\", \"from-primary\", \"to-secondary\"], [1, \"w-50\", \"max-w-md\", \"rounded-lg\", \"bg-background\", \"shadow-xl\"], [1, \"loginBox\"], [\"src\", \"../../../assets/logo/Logos-Readability-Netflix-logo.png\", 1, \"imgLogo\", \"mb-6\"], [1, \"mb-6\", \"text-3xl\", \"flex\", \"justify-center\", \"font-bold\", \"text-primary-foreground\"], [1, \"mb-6\", \"text-3xl\", \"font-bold\", \"text-primary-foreground\", \"h6msg\", \"flex\", \"justify-center\"], [1, \"space-y-4\", 3, \"submit\"], [\"for\", \"email\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-white\"], [\"id\", \"email\", \"type\", \"email\", \"placeholder\", \"example@email.com\", \"required\", \"\", 1, \"text-black\", \"mt-1\", \"block\", \"w-full\", \"px-4\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\", \"sm:text-sm\", 3, \"input\"], [\"class\", \"text-red-500 text-xs mt-1\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-white\", \"mt-4\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"********\", \"required\", \"\", 1, \"text-black\", \"mt-1\", \"block\", \"w-full\", \"px-4\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\", \"sm:text-sm\", 3, \"input\"], [\"type\", \"submit\", 1, \"w-full\", \"px-4\", \"py-2\", \"text-white\", \"font-semibold\", \"rounded-md\", \"shadow-sm\", \"mt-4\", \"cursor-pointer\", \"loginBtn\", 3, \"disabled\"], [1, \"mt-4\", \"text-center\", \"text-muted-foreground\"], [1, \"registerLink\", 3, \"click\"], [\"registerLink\", \"\"], [1, \"text-red-500\", \"text-xs\", \"mt-1\"], [\"type\", \"button\", 1, \"loginBtn\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementStart(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Welcome to FlixNet!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Login or Register to continue.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_8_listener($event) {\n          return ctx.onSubmit($event);\n        });\n        i0.ɵɵelementStart(9, \"div\")(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 8);\n        i0.ɵɵlistener(\"input\", function RegisterComponent_Template_input_input_12_listener($event) {\n          return ctx.onInput($event, \"email\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, RegisterComponent_p_13_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 10);\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 11);\n        i0.ɵɵlistener(\"input\", function RegisterComponent_Template_input_input_17_listener($event) {\n          return ctx.onInput($event, \"password\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, RegisterComponent_p_18_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13);\n        i0.ɵɵelementContainerStart(22);\n        i0.ɵɵtext(23, \" Don't have an account? \");\n        i0.ɵɵelementStart(24, \"span\", 14);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_span_click_24_listener() {\n          return ctx.navigateToRegister();\n        });\n        i0.ɵɵtext(25, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(26, RegisterComponent_ng_template_26_Template, 3, 0, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !ctx.email && ctx.formSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.password && ctx.formSubmitted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.email || !ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", \"Login\", \" \");\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["axios","i0","RegisterComponent","constructor","router","toggleForm","showLoginBox","onInput","event","field","input","target","value","email","password","age","onSubmit","preventDefault","formSubmitted","body","post","headers","then","response","console","log","data","alert","navigate","catch","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jatinchouhan/Desktop/All Files/MERN_Project/FletNix/client/src/app/pages/register/register.component.ts","/Users/jatinchouhan/Desktop/All Files/MERN_Project/FletNix/client/src/app/pages/register/register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport axios from 'axios';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  email: string = '';\n  password: string = '';\n  age : string = '';\n  formSubmitted: boolean = false;\n  showLoginBox: boolean = true;\n\n  constructor(private router: Router) { }\n\n  toggleForm() {\n    this.showLoginBox = !this.showLoginBox;\n  }\n\n  onInput(event: Event, field: string) {\n    const input = event.target as HTMLInputElement;\n    const value = input.value;\n    if (field === 'email') {\n      this.email = value;\n    } else if (field === 'password') {\n      this.password = value;\n    }\n    else if(field==='age'){\n      this.age = value;\n    }\n  }\n\n\n  onSubmit(event: Event) {\n    event.preventDefault(); // Prevent the default form submission\n\n    this.formSubmitted = true;\n    if (this.email && this.password) {\n      // Define the request body\n      const body = {\n        email: this.email,\n        password: this.password,\n        age : this.age\n      };\n\n      // Make the POST request with Axios\n      axios.post('https://flet-nix-backend.vercel.app/api/auth/register', body, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(response => {\n          console.log('Response:', response.data);\n          alert(\"Registration Successfull!\");\n          this.router.navigate(['/login']);\n          // Handle response here (e.g., save token, navigate to another page, etc.)\n        })\n        .catch(error => {\n          console.error('Error:', error);\n          // Handle error here (e.g., show error message to user)\n        });\n\n      // Example action after successful submission\n      this.showLoginBox = false;\n    }\n  }\n}\n","<div class=\"flex mainBox min-h-screen items-center justify-center bg-gradient-to-br from-primary to-secondary\">\n    <div class=\"w-50 max-w-md rounded-lg bg-background shadow-xl\">\n      <div class=\"loginBox\">\n        <img src=\"../../../assets/logo/Logos-Readability-Netflix-logo.png\" class=\"imgLogo mb-6\" />\n                <h2 class=\"mb-6 text-3xl flex justify-center font-bold text-primary-foreground\">Welcome to FlixNet!</h2>\n        <h5 class=\"mb-6 text-3xl font-bold text-primary-foreground h6msg flex justify-center\">Login or Register to continue.</h5>\n        <form class=\"space-y-4\" (submit)=\"onSubmit($event)\">\n          <div>\n            <label for=\"email\" class=\"block text-sm font-medium text-white\">Email</label>\n            <input id=\"email\" type=\"email\" (input)=\"onInput($event, 'email')\" placeholder=\"example@email.com\" required\n              class=\"text-black mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\n            <p *ngIf=\"!email && formSubmitted\" class=\"text-red-500 text-xs mt-1\">Please enter a valid email</p>\n          </div>\n          <div>\n            <label for=\"password\" class=\"block text-sm font-medium text-white mt-4\">Password</label>\n            <input id=\"password\" type=\"password\" (input)=\"onInput($event, 'password')\" placeholder=\"********\" required\n              class=\"text-black mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\n            <p *ngIf=\"!password && formSubmitted\" class=\"text-red-500 text-xs mt-1\">Password is required</p>\n          </div>\n          <button type=\"submit\" [disabled]=\"!email || !password\"\n            class=\"w-full px-4 py-2 text-white font-semibold rounded-md shadow-sm  mt-4 cursor-pointer loginBtn\">\n            {{'Login' }}\n          </button>\n        </form>\n        <div class=\"mt-4 text-center text-muted-foreground\">\n          <ng-container>\n            Don't have an account? <span class=\"registerLink\" (click)=\"navigateToRegister()\">Register</span>\n          </ng-container>\n          <ng-template #registerLink>\n            Already have an account? <button type=\"button\" (click)=\"toggleForm()\" class=\" loginBtn\">Login</button>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}