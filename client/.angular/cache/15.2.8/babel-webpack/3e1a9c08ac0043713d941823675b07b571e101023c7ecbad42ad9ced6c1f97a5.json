{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ImageService {\n  constructor(http) {\n    this.http = http;\n    this.imageUrl = '../utils/dummyImage.json';\n  }\n  getImageUrls() {\n    return this.http.get(this.imageUrl);\n  }\n  getRandomImageUrl(imageUrls) {\n    const randomIndex = Math.floor(Math.random() * imageUrls.length);\n    return imageUrls[randomIndex].imageUrl;\n  }\n  static #_ = this.ɵfac = function ImageService_Factory(t) {\n    return new (t || ImageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ImageService,\n    factory: ImageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,aAAQ,GAAE,0BAA0B;EAEJ;EAExCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,QAAQ,CAAC;EAC5C;EAEAC,iBAAiB,CAACC,SAAgB;IAChC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,SAAS,CAACK,MAAM,CAAC;IAChE,OAAOL,SAAS,CAACC,WAAW,CAAC,CAACH,QAAQ;EACxC;EAAC;qBAZUL,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAa,SAAZb,YAAY;IAAAc,YAFX;EAAM","names":["ImageService","constructor","http","getImageUrls","get","imageUrl","getRandomImageUrl","imageUrls","randomIndex","Math","floor","random","length","factory","providedIn"],"sourceRoot":"","sources":["/Users/jatinchouhan/Desktop/All Files/MERN_Project/FletNix/client/src/app/services/image.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private imageUrl ='../utils/dummyImage.json' ;\n\n  constructor(private http: HttpClient) { }\n\n  getImageUrls(): Observable<any[]> {\n    return this.http.get<any[]>(this.imageUrl);\n  }\n\n  getRandomImageUrl(imageUrls: any[]): string {\n    const randomIndex = Math.floor(Math.random() * imageUrls.length);\n    return imageUrls[randomIndex].imageUrl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}